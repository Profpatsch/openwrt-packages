#!/bin/sh

export DATE="12.4.2006";SCRIPT=${0#/rom}
export TITLE="Status: OLSR"

. /www/cgi-bin-pre.sh

WLDEV='wl0'
ff_httpinfo="1"
if [ "$REQUEST_METHOD" = "POST" ]; then
read QUERY_STRING
fi
if [ "$QUERY_STRING" != "${QUERY_STRING#*post_olsr=}" ]; then

cat<<EOF
<H1>Status: OLSR</H1>

<FORM ACTION="cgi-bin-status.html" METHOD="POST"><TABLE CLASS="shadow0" CELLPADDING="0" CELLSPACING="0"><TR><TD><TABLE CLASS="shadow1" CELLPADDING="0" CELLSPACING="0"><TR><TD><TABLE CLASS="shadow2" CELLPADDING="0" CELLSPACING="0"><TR><TD><TABLE BORDER="1"
CELLPADDING="0" CELLSPACING="0" CLASS="form"><TR><TD><INPUT NAME="post_overview" TITLE="Allgemeine Eigenschaften des Gerätes in einer Übersicht anzeigen" TYPE="SUBMIT" VALUE="Übersicht">&nbsp;&nbsp;&nbsp;<INPUT NAME="post_route" TITLE="Die aktuelle Routingtabelle des Gerätes anzeigen" TYPE="SUBMIT" VALUE="Routen">
EOF

cat<<EOF
&nbsp;
<INPUT NAME="post_scan" TITLE="Scan nach empfangbaren WLAN-Stationen ausführen" TYPE="SUBMIT" VALUE="WLAN Scan">

EOF

cat<<EOF
&nbsp;
<INPUT NAME="post_olsr" TITLE="OLSR Statusseite anzeigen" TYPE="SUBMIT" VALUE="OLSR-Info">

EOF                                                                                                                                                        
                                                                                                                                                           
fi                                                                                                                                                         
                                                                                                                                                           
cat<<EOF                                                                                                                                                   
</TD>                                                                                                                                                      
</TR>                                                                                                                                                      
<TR><TD>&nbsp;</TD>                                                                                                                                        
</TR><TR><TD>                                                                                                                                              
EOF 
                                                                                                                                                           
wget -q -O - http://127.0.0.1:2006/|sed -ne'                                                                                                               
/^Table:/,/^$/{                                                                                                                                            
s#^Table: \(.*\)#<H2>\1</H2><\TABLE BORDER="1" CELLSPACING="0" CELLPADDING="0" WIDTH="100%">#                                                              
:n                                                                                                              
p                                                                                                                                                          
n                                                                                                                                                          
s#[0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+#<A HREF="http://&/">&</A>#g                                                                                           
s/              /       -       /g                                                                                                                         
s/      $//                                                                                                                                                
s#      #</TD><TD>#g                                                                                                                                       
s#.\+#<TR><TD>&</TD></TR>#                                                                                                                                 
s/./&/                                                                                                                                                     
tn                                                                                                                                                         
c\                                                                                                                                                         
<\/TABLE>                                                                                                                                                  
p                                                                                                                                                          
}                                                                                                                                                          
'                                                                                                                                                          
                                                                                                                                                           
cat<<EOF                                                                                                                                                   
</TD>                                                                                                                                                      
</TR>                                                                                                                                                      
</TABLE></TD></TR></TABLE></TD></TR></TABLE></TD></TR></TABLE>                                                                                             
</FORM>                                                                                                                                                    
EOF           

elif [ "$QUERY_STRING" != "${QUERY_STRING#*post_route=}" ]; then

cat<<EOF
<H1>Status: Routen</H1>

<FORM ACTION="cgi-bin-status.html" METHOD="POST"><TABLE CLASS="shadow0" CELLPADDING="0" CELLSPACING="0"><TR><TD><TABLE CLASS="shadow1" CELLPADDING="0" CELLSPACING="0"><TR><TD><TABLE CLASS="shadow2" CELLPADDING="0" CELLSPACING="0"><TR><TD><TABLE BORDER="1"
CELLPADDING="0" CELLSPACING="0" CLASS="form"><TR><TD><INPUT NAME="post_overview" TITLE="Allgemeine Eigenschaften des Gerätes in einer Übersicht anzeigen" TYPE="SUBMIT" VALUE="Übersicht">&nbsp;&nbsp;&nbsp;<INPUT NAME="post_route" TITLE="Die aktuelle Routingtabelle des Gerätes anzeigen" TYPE="SUBMIT" VALUE="Routen">
EOF

cat<<EOF
&nbsp;
<INPUT NAME="post_scan" TITLE="Scan nach empfangbaren WLAN-Stationen ausführen" TYPE="SUBMIT" VALUE="WLAN Scan">

EOF

cat<<EOF
&nbsp;
<INPUT NAME="post_olsr" TITLE="OLSR Statusseite anzeigen" TYPE="SUBMIT" VALUE="OLSR-Info">
EOF



cat<<EOF
</TD>
</TR>

<TR><TD>&nbsp;</TD>
</TR><TR><TD>
EOF

ip route|awk '
function td(s) {
print "<TD STYLE=\"padding:0 2 0 2;font-size:9px;\">"s"</TD>"
}
function ip(s) {
if(!/\//&&s!="default") {
td(sprintf("<A HREF=\"http://%s/\">%s</A>", s, s))
}
else {
td(s)
}
}
BEGIN {
print "<""TABLE BORDER=\"0\" CELLPADDING=\"0\" CELLSPACING=\"0\">"
}
{
print "<TR></TR>"
ip($1)
s=""
for(i=2;i<=NF;i++) s=s" "$i
td(s)
print "</TR>"
}
END {
print "<""/TABLE>"
}'

cat<<EOF
</TD>
</TR>
</TABLE></TD></TR></TABLE></TD></TR></TABLE></TD></TR></TABLE>

</FORM>
EOF

elif [ "$QUERY_STRING" != "${QUERY_STRING#*post_scan=}" ]; then

cat<<EOF
<H1>Status: WLAN Scan</H1>

<FORM ACTION="cgi-bin-status.html" METHOD="POST"><TABLE CLASS="shadow0" CELLPADDING="0" CELLSPACING="0"><TR><TD><TABLE CLASS="shadow1" CELLPADDING="0" CELLSPACING="0"><TR><TD><TABLE CLASS="shadow2" CELLPADDING="0" CELLSPACING="0"><TR><TD><TABLE BORDER="1"
CELLPADDING="0" CELLSPACING="0" CLASS="form"><TR><TD COLSPAN="7"><INPUT NAME="post_overview" TITLE="Allgemeine Eigenschaften des Gerätes in einer Übersicht anzeigen" TYPE="SUBMIT" VALUE="Übersicht">&nbsp;&nbsp;&nbsp;<INPUT NAME="post_route" TITLE="Die aktuelle Routingtabelle des Gerätes anzeigen" TYPE="SUBMIT" VALUE="Routen">
EOF

cat<<EOF
&nbsp;
<INPUT NAME="post_scan" TITLE="Scan nach empfangbaren WLAN-Stationen ausführen" TYPE="SUBMIT" VALUE="WLAN Scan">

EOF

cat<<EOF
&nbsp;
<INPUT NAME="post_olsr" TITLE="OLSR Statusseite anzeigen" TYPE="SUBMIT" VALUE="OLSR-Info">
EOF

cat<<EOF
</TD>
</TR>

<TR><TD COLSPAN="7">&nbsp;</TD>
</TR><TR><TH>SSID</TH><TH>Kanal</TH>
<TH>Ad-Hoc</TH><TH>Open</TH><TH>Signal</TH><TH>Max.</TH><TH>BSSID</TH>
</TR><TR><TD COLSPAN="7">
EOF

iwlist wl0 scan |grep -v 'S:N'|awk '
BEGIN {
print "</td></tr>";
}
{
adhoc=($7~/I|Is/?"yes":"no");
open=($7~/Es|EBs|I|Is/?"yes":"no");

rssi_val=int(substr($5, 1, length($5) - 2));
if (rssi_val < 5) rssi = "0";
   else if ( rssi_val < 12) rssi ="1";
     else if ( rssi_val < 19) rssi ="2";
        else if ( rssi_val < 26) rssi ="3";
          else if ( rssi_val < 33) rssi ="4";
             else rssi ="5";


#print "<tr>"
print "<td>"$1"</td>"
print "<td>"$3"</td>"
print "<td><img src=\"images/"adhoc".gif\" alt=\""adhoc"\" title=\"Mode\" align=\"absmiddle\"></td>"
print "<td><img src=\"images/"open".gif\" alt=\""open"\" title=\"Open\" align=\"absmiddle\"></td>"
print "<td><img src=\"images/power"rssi".gif\" title=\""rssi_val" db\" align=\"absmiddle\"></td>"
print "<td>"$4"</td>"
print "<td>"$2"</td>"
print "</tr>";
}
END {
print "<tr><td colspan=\"7\">&nbsp;"
}'


cat<<EOF

<H1>Status: WLAN Neighbors</H1>

</TD>
</TR>

<TR><TD COLSPAN="7">&nbsp;</TD>
</TR><TR><TH>MAC</TH><TH>Kanal</TH>
<TH>Ad-Hoc</TH><TH>Signal</TH><TH>Rate</TH><TH>TXSEQ</TH><TH>RXSEQ</TH>
</TR><TR><TD COLSPAN="7">
EOF

wlanconfig ath0 list sta |grep -v 'ADDR'|awk '
BEGIN {
print "</td></tr>";
}
{
adhoc=($10~/I|Is|IS/?"yes":"no");
open=($7~/Es|EBs|I|Is/?"yes":"no");

rssi_val=int($5);
if (rssi_val < 5) rssi = "0";
   else if ( rssi_val < 12) rssi ="1";
     else if ( rssi_val < 19) rssi ="2";
        else if ( rssi_val < 26) rssi ="3";
          else if ( rssi_val < 33) rssi ="4";
             else rssi ="5";


#print "<tr>"
print "<td>"$1"</td>"
print "<td>"$3"</td>"
print "<td><img src=\"images/"adhoc".gif\" alt=\""adhoc"\" title=\"Mode\" align=\"absmiddle\"></td>"
print "<td><img src=\"images/power"rssi".gif\" title=\""rssi_val" db\" align=\"absmiddle\"></td>"
print "<td>"$4"</td>"
print "<td>"$8"</td>"
print "<td>"$9"</td>"
print "</tr>";
}
END {
print "<tr><td colspan=\"7\">&nbsp;"
}'


cat<<EOF
</TD>
</TR>
</TABLE></TD></TR></TABLE></TD></TR></TABLE></TD></TR></TABLE>

</FORM>
EOF

else

cat<<EOF
<H1>Status: &Uuml;bersicht</H1>

<SCRIPT LANGUAGE="JavaScript" TYPE="text/javascript"><!--
function fold(id) {
obj = document.getElementById(id);
obj.style.display = ('none'==obj.style.display?'block':'none');
return false;
}
//--></SCRIPT>

<FORM ACTION="cgi-bin-status.html" METHOD="POST"><TABLE CLASS="shadow0" CELLPADDING="0" CELLSPACING="0"><TR><TD><TABLE CLASS="shadow1" CELLPADDING="0" CELLSPACING="0"><TR><TD><TABLE CLASS="shadow2" CELLPADDING="0" CELLSPACING="0"><TR><TD><TABLE BORDER="1"
CELLPADDING="0" CELLSPACING="0" CLASS="formfixwidth"><TR><TD COLSPAN="2"><INPUT NAME="post_overview" TITLE="Allgemeine Eigenschaften des Gerätes in einer Übersicht anzeigen" TYPE="SUBMIT" VALUE="Übersicht">&nbsp;&nbsp;&nbsp;<INPUT NAME="post_route" TITLE="Die aktuelle Routingtabelle des Gerätes anzeigen" TYPE="SUBMIT" VALUE="Routen">
EOF

cat<<EOF
&nbsp;
<INPUT NAME="post_scan" TITLE="Scan nach empfangbaren WLAN-Stationen ausführen" TYPE="SUBMIT" VALUE="WLAN Scan">
EOF
cat<<EOF
&nbsp;
<INPUT NAME="post_olsr" TITLE="OLSR Statusseite anzeigen" TYPE="SUBMIT" VALUE="OLSR-Info">
EOF


WLMASK=$(ip -f inet addr show $WLDEV label $WLDEV |awk 'sub("inet","") {print $1}')

cat<<EOF
</TD>
</TR>

<TR><TD COLSPAN="2">&nbsp;</TD>
</TR><TR><TD>IP Adresse:</TD><TD>IP:&nbsp;$(ip -f inet addr show $WLDEV label $WLDEV |awk 'sub("inet","") {sub("/.*","",$1);print $1}'),
Maske:&nbsp;$(ifconfig $WLDEV |grep Mask| awk 'sub("Mask:","") {print $4}'),
MAC:&nbsp;$(ip link show $WLDEV|awk 'sub("ether","") {print $2}')</TD>
</TR>

<TR><TD>WLAN-Status:</TD><TD>
$(iwconfig $WLDEV 2>&1)</TD>
</TR>

<TR><TD>Ger&auml;telaufzeit:</TD>
<TD>$(uptime)</TD>
</TR><TR><TD>Ger&auml;teinfo:</TD><TD>
System: $(cat /proc/cpuinfo |grep system |awk '{ print $4, $5 }')<BR>
CPU: $(cat /proc/cpuinfo |grep 'cpu model' |awk '{ print $4, $5, $6 }') ($(cat /proc/cpuinfo  |grep 'Bogo' |awk '{ print $3}') BogoMips)<BR>
EOF

if [ "$ff_httpinfo" != "0" ];then

cat<<EOF
</TD>
</TR>

<TR><TD>Nachbarn:</TD><TD>
EOF
wget -q -O - http://127.0.0.1:2006/neighbours|sed -ne'
/^Table: Links/{
s/.*/<\TABLE FRAME="VOID" BORDER="1" CELLSPACING="0" CELLPADDING="1" WIDTH="100%">/
:n
p
n
s/^[^	]*	//
s/^remote //
s#\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\([^/]\)#<A HREF="http://\1/cgi-bin-status.html">\1</A>\2#g
s/	$//
s#	#</TD><TD>#g
s#.\+#<TR><TD STYLE="padding-right:100">&</TD></TR>#
s/./&/
tn
c\
<\/TABLE>
p
}
'
fi

cat<<EOF
</TD>
</TR>

<TR><TD>Kernel-Log: </TD><TD><A HREF="#" ONCLICK="return fold('dmesg')">Ein-
/ Ausblenden</A></TD>
</TR><TR><TD COLSPAN="2">
EOF

echo -n '<PRE STYLE="display:none" ID="dmesg">'
dmesg 2>&1
echo '</PRE>'
if pidof syslogd>/dev/null;then

cat<<EOF
</TD>
</TR>

<TR><TD>System-Log:
</TD><TD><A HREF="#" ONCLICK="return fold('logread')">Ein-
/ Ausblenden</A></TD>
</TR><TR><TD COLSPAN="2">
EOF

echo -n '<PRE STYLE="display:none" ID="logread">'
logread 2>&1
echo '</PRE>'
fi

cat<<EOF
</TD>
</TR>

<TR><TD>IP-NAT: </TD><TD><A HREF="#" ONCLICK="return fold('nat')">Ein-
/ Ausblenden</A></TD>
</TR><TR><TD COLSPAN="2">
EOF

echo -n '<PRE STYLE="display:none" ID="nat">'
iptables -t nat -L -n -v 2>&1
echo '</PRE>'

cat<<EOF
</TD>
</TR>

<TR><TD>Schnittstellen-Konfiguration: </TD><TD><A HREF="#" ONCLICK="return fold('ifconfig')">Ein-
/ Ausblenden</A></TD>
</TR><TR><TD COLSPAN="2">
EOF

echo -n '<PRE STYLE="display:none" ID="ifconfig">'
echo
brctl show 2>&1
echo
ip addr show 2>&1
echo '</PRE>'

cat<<EOF
</TD>
</TR>


<TR><TD>Aktive Verbindungen: </TD><TD><A HREF="#" ONCLICK="return fold('conntrk')">Ein-
/ Ausblenden</A></TD>
</TR><TR><TD COLSPAN="2">
EOF

echo -n '<PRE STYLE="display:none" ID="conntrk">'
awk 'BEGIN{while(0<getline<"/proc/net/ip_conntrack"){if(match($0,"src=[0-9\.]+")){all[substr($0,RSTART+4,RLENGTH-4)]++}}for(i in all){print all[i]"\t"i}}'|sort -n
echo '</PRE>'

cat<<EOF
</TD>
</TR>
</TABLE></TD></TR></TABLE></TD></TR></TABLE></TD></TR></TABLE>

</FORM>
EOF

#fi
fi

. /www/cgi-bin-post.sh
